{"version":3,"sources":["game/KeyboardListener.js","../ts/game/KeyboardListener.ts"],"names":["System","register","exports_1","context_1","id","KeyboardListener","execute","notifyAll","constructor","this","state","observers","document","addEventListener","handleKeydown","bind","subscribe","observerFunction","push","event","command","playerId","keyPressed","key","console","log","length"],"mappings":"aAAAA,OAAOC,SAAS,IAAI,SAAUC,EAAWC,GACrCA,GAAAA,EAAAC,GAGA,MAAO,CAFHC,QAAAA,GAIAC,QAAS,WCcTJ,EAAKK,UApBb,MAIIC,cACIC,KAAKC,MAAQ,CAAEC,UAAW,IAC1BC,SAASC,iBAAiB,UAAWJ,KAAKK,cAAcC,KAAKN,OAGjEO,UAAWC,GACPR,KAAKC,MAAMC,UAAUO,KAAMD,GAGvBH,cAAeK,GACnB,MACMC,EAAU,CACZC,SAAU,UACVC,WAHeH,EAAMI,KAMzBd,KAAKF,UAAWa,GAGZb,UAAWa,GACfI,QAAQC,IAAI,aAAahB,KAAKC,MAAMC,UAAUe,oBAE9C,IAAI,MAAMT,KAAoBR,KAAKC,MAAMC,UACrCM,EAAiBG","file":"KeyboardListener.js","sourcesContent":["System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var KeyboardListener;\n    var __moduleName = context_1 && context_1.id;\n    return {\n        setters: [],\n        execute: function () {\n            KeyboardListener = class KeyboardListener {\n                constructor() {\n                    this.state = { observers: [] };\n                    document.addEventListener('keydown', this.handleKeydown.bind(this));\n                }\n                subscribe(observerFunction) {\n                    this.state.observers.push(observerFunction);\n                }\n                handleKeydown(event) {\n                    const keyPressed = event.key;\n                    const command = {\n                        playerId: 'player1',\n                        keyPressed\n                    };\n                    this.notifyAll(command);\n                }\n                notifyAll(command) {\n                    console.log(`Notifying ${this.state.observers.length} observers`);\n                    for (const observerFunction of this.state.observers) {\n                        observerFunction(command);\n                    }\n                }\n            };\n            exports_1(\"default\", KeyboardListener);\n        }\n    };\n});\n","export default class KeyboardListener\n{\n    private state:any;\n\n    constructor(){\n        this.state = { observers: [] }\n        document.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n\n    subscribe( observerFunction:Function ){\n        this.state.observers.push( observerFunction );\n    }\n\n    private handleKeydown( event:KeyboardEvent ){\n        const keyPressed = event.key;\n        const command = {\n            playerId: 'player1',\n            keyPressed\n        };\n        \n        this.notifyAll( command );\n    }\n\n    private notifyAll( command:Object ){\n        console.log(`Notifying ${this.state.observers.length} observers`);\n\n        for(const observerFunction of this.state.observers){\n            observerFunction(command);\n        }\n    }\n}"]}