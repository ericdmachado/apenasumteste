{"version":3,"sources":["game/KeyboardListener.js","../ts/game/KeyboardListener.ts"],"names":["System","register","exports_1","context_1","KeyboardListener","__moduleName","id","setters","execute","constructor","keycodes","state","observers","document","addEventListener","handleKeydown","subscribe","observerFunction","event","keyPressed","key","command","playerId","notifyAll","console","log","length"],"mappings":";;AAAAA,MAAM,CAACC,QAAP,CAAgB,EAAhB,EAAoB,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;AAChD;;AACA,MAAIC,gBAAJ;;AACA,MAAIC,YAAY,GAAGF,SAAS,IAAIA,SAAS,CAACG,EAA1C;;AACA,SAAO;AACHC,IAAAA,OAAO,EAAE,EADN;AAEHC,IAAAA,OAAO,EAAE,YAAY;ACN7BJ,MAAAA,gBAAA,GAAA,MAAqBA,gBAArB,CAAqC;AAKjCK,QAAAA,WAAA,GAAA;AACI,eAAKC,QAAL,GAAgB;AAAC,gBAAG,OAAJ;AAAa,gBAAI,IAAjB;AAAuB,gBAAI;AAA3B,WAAhB;AACA,eAAKC,KAAL,GAAa;AACTC,YAAAA,SAAS,EAAE;AADF,WAAb;AAIAC,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,aAA1C;AACH;;AAEDC,QAAAA,SAAS,CAAEC,gBAAF,EAA2B;AAChC,eAAKN,KAAL,CAAWC,SAAX,CAAsBK,gBAAtB;AACH;;AAEDF,QAAAA,aAAa,CAAEG,KAAF,EAAqB;AAC9B,gBAAMC,UAAU,GAAGD,KAAK,CAACE,GAAzB;AAEA,gBAAMC,OAAO,GAAG;AACZC,YAAAA,QAAQ,EAAE,SADE;AAEZH,YAAAA;AAFY,WAAhB;AAKA,eAAKI,SAAL,CAAgBF,OAAhB;AACH;;AAEDE,QAAAA,SAAS,CAAEF,OAAF,EAAgB;AACrBG,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,MAAM,YAApD;;AAEA,eAAI,MAAMT,gBAAV,IAA8B,KAAKN,KAAL,CAAWC,SAAzC,EAAmD;AAC/CK,YAAAA,gBAAgB,CAACI,OAAD,CAAhB;AACH;AACJ;;AAnCgC,OAArC;ADiCYnB,MAAAA,SAAS,CAAC,SAAD,EAAYE,gBAAZ,CAAT;AACH;AA9BE,GAAP;AAgCH,CApCD","file":"KeyboardListener.js","sourcesContent":["System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var KeyboardListener;\n    var __moduleName = context_1 && context_1.id;\n    return {\n        setters: [],\n        execute: function () {\n            KeyboardListener = class KeyboardListener {\n                constructor() {\n                    this.keycodes = { 32: 'Space', 87: 'Up', 83: 'Down' };\n                    this.state = {\n                        observers: []\n                    };\n                    document.addEventListener('keydown', this.handleKeydown);\n                }\n                subscribe(observerFunction) {\n                    this.state.observers(observerFunction);\n                }\n                handleKeydown(event) {\n                    const keyPressed = event.key;\n                    const command = {\n                        playerId: 'player1',\n                        keyPressed\n                    };\n                    this.notifyAll(command);\n                }\n                notifyAll(command) {\n                    console.log(`Notifying ${this.state.observers.length} observers`);\n                    for (const observerFunction of this.state.observers) {\n                        observerFunction(command);\n                    }\n                }\n            };\n            exports_1(\"default\", KeyboardListener);\n        }\n    };\n});\n","export default class KeyboardListener{\n\n    private keycodes:Object;\n    private state:any;\n\n    constructor(){\n        this.keycodes = {32:'Space', 87: 'Up', 83: 'Down'};\n        this.state = {\n            observers: []\n        }\n\n        document.addEventListener('keydown', this.handleKeydown);\n    }\n\n    subscribe( observerFunction:Function ){\n        this.state.observers( observerFunction );\n    }\n\n    handleKeydown( event:KeyboardEvent ){\n        const keyPressed = event.key;\n        \n        const command = {\n            playerId: 'player1',\n            keyPressed\n        };\n        \n        this.notifyAll( command );\n    }\n\n    notifyAll( command:Object ){\n        console.log(`Notifying ${this.state.observers.length} observers`);\n\n        for(const observerFunction of this.state.observers){\n            observerFunction(command);\n        }\n    }\n}"]}